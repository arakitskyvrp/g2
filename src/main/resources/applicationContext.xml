<?xml  version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:annotation-config />
    <context:component-scan base-package="com.jobboard" />
    <context:component-scan base-package="com.jobboard.oauth.scribe.web.controller" />
    
    <mvc:annotation-driven/>

    <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>
	
	<bean id="soapConnectionService" class="com.sforce.soap.services.SOAPConnectionService"></bean>

    <tx:annotation-driven />
<!--     <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"> -->
<!--         <property name="entityManagerFactory" ref="entityManagerFactory" /> -->
<!--         <property name="dataSource" ref="dataSource"/> -->

<!--     </bean> -->

	<!-- oauth start-->
	<bean id="linkedInServiceConfig" class="com.jobboard.oauth.scribe.OAuthServiceConfig">
		<constructor-arg value="vqokemyzydbb" />
		<constructor-arg value="GiLCgoYUFvaYTi3W"/>
		<constructor-arg value="http://fbjobboard.herokuapp.com/people/callback-linkedin/"/>
		<constructor-arg value="r_fullprofile r_emailaddress r_network"/>
		<constructor-arg value="org.scribe.builder.api.LinkedInApi"/>
	</bean>
	
	<bean id="linkedInServiceProvider" class="com.jobboard.oauth.scribe.OAuthServiceProvider">
		<constructor-arg name="config" ref="linkedInServiceConfig" />
	</bean>
	
	<bean id="facebookServiceConfig" class="com.jobboard.oauth.scribe.OAuthServiceConfig">
		<constructor-arg value="519805778070725" />
		<constructor-arg value="b70fe0ea9558821123cd72cba2a5636c"/>
		<constructor-arg value="http://fbjobboard.herokuapp.com/people/callback-facebook/"/>
		<constructor-arg value="email"/>
		<constructor-arg value="org.scribe.builder.api.FacebookApi"/>
	</bean>
	
	<bean id="facebookServiceProvider" class="com.jobboard.oauth.scribe.OAuthServiceProvider">
		<constructor-arg name="config" ref="facebookServiceConfig" />
	</bean>
	
	<bean id="googleServiceConfig" class="com.jobboard.oauth.scribe.OAuthServiceConfig">
		<constructor-arg value="768919101912.apps.googleusercontent.com" />
		<constructor-arg value="52TXWXDo-rdRMOzdpbzdJecp"/>
		<constructor-arg value="http://fbjobboard.herokuapp.com/people/callback-google/"/>
		<constructor-arg value="https://mail.google.com/ https://www.googleapis.com/auth/userinfo.email"/>
		<constructor-arg value="org.scribe.builder.api.GoogleApi"/>
	</bean>
	
	<bean id="googleServiceProvider" class="com.jobboard.oauth.scribe.OAuthServiceProvider">
		<constructor-arg name="config" ref="googleServiceConfig" />
	</bean>
	<!-- oauth end -->


    <!--beans profile="default">
        <jdbc:embedded-database id="dataSource"/>        
        <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
            <property name="dataSource" ref="dataSource"/>
            <property name="jpaVendorAdapter">
                <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
            </property>
            <property name="jpaProperties">
                <props>
                    <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
                    <prop key="hibernate.hbm2ddl.auto">create</prop>
                </props>
            </property>
        </bean>
    </beans-->

    <beans profile="prod">
        <bean class="java.net.URI" id="dbUrl">
            <constructor-arg value="#{systemEnvironment['DATABASE_URL']}"/>
        </bean>

        <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
            <property name="url" value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }"/>
            <property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
            <property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>
        </bean>
        
<!--         <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> -->
<!--             <property name="dataSource" ref="dataSource"/> -->
<!--             <property name="jpaVendorAdapter"> -->
<!--                 <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/> -->
<!--             </property> -->
<!--             <property name="jpaProperties"> -->
<!--                 <props> -->
<!--                     <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop> -->
<!--                     <prop key="hibernate.show_sql">true</prop> -->
<!--                     change this to 'verify' before running as a production app -->
<!--                     <prop key="hibernate.hbm2ddl.auto">update</prop> -->
<!--                 </props> -->
<!--             </property> -->
<!--         </bean> -->
    </beans>

</beans>
