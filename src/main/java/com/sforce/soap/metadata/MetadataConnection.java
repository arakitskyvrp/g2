package com.sforce.soap.metadata;import com.sforce.ws.ConnectionException;import com.sforce.ws.ConnectorConfig;import com.sforce.ws.bind.XMLizable;import com.sforce.ws.bind.TypeMapper;import java.util.HashMap;import javax.xml.namespace.QName;/** * Generated class, please do not edit. */public class MetadataConnection {  private TypeMapper __typeMapper = new TypeMapper();  private ConnectorConfig __config;  private HashMap<QName, XMLizable> __extraHeaders = new HashMap<QName, XMLizable>();  public ConnectorConfig getConfig() {    return __config;  }    private com.sforce.soap.metadata.SessionHeader_element __SessionHeader;  public void setSessionHeader(java.lang.String sessionId) {    __SessionHeader = new com.sforce.soap.metadata.SessionHeader_element();            __SessionHeader.setSessionId(sessionId);  }  public void clearSessionHeader() {    __SessionHeader = null;  }  public com.sforce.soap.metadata.SessionHeader_element getSessionHeader() {    return  __SessionHeader;  }  public void __setSessionHeader(com.sforce.soap.metadata.SessionHeader_element __header) {    __SessionHeader = __header ;  }    private com.sforce.soap.metadata.DebuggingInfo_element __DebuggingInfo;  public void setDebuggingInfo(java.lang.String debugLog) {    __DebuggingInfo = new com.sforce.soap.metadata.DebuggingInfo_element();            __DebuggingInfo.setDebugLog(debugLog);  }  public void clearDebuggingInfo() {    __DebuggingInfo = null;  }  public com.sforce.soap.metadata.DebuggingInfo_element getDebuggingInfo() {    return  __DebuggingInfo;  }  public void __setDebuggingInfo(com.sforce.soap.metadata.DebuggingInfo_element __header) {    __DebuggingInfo = __header ;  }    private com.sforce.soap.metadata.CallOptions_element __CallOptions;  public void setCallOptions(java.lang.String client) {    __CallOptions = new com.sforce.soap.metadata.CallOptions_element();            __CallOptions.setClient(client);  }  public void clearCallOptions() {    __CallOptions = null;  }  public com.sforce.soap.metadata.CallOptions_element getCallOptions() {    return  __CallOptions;  }  public void __setCallOptions(com.sforce.soap.metadata.CallOptions_element __header) {    __CallOptions = __header ;  }    private com.sforce.soap.metadata.DebuggingHeader_element __DebuggingHeader;  public void setDebuggingHeader(com.sforce.soap.metadata.LogInfo[] categories,com.sforce.soap.metadata.LogType debugLevel) {    __DebuggingHeader = new com.sforce.soap.metadata.DebuggingHeader_element();            __DebuggingHeader.setCategories(categories);       __DebuggingHeader.setDebugLevel(debugLevel);  }  public void clearDebuggingHeader() {    __DebuggingHeader = null;  }  public com.sforce.soap.metadata.DebuggingHeader_element getDebuggingHeader() {    return  __DebuggingHeader;  }  public void __setDebuggingHeader(com.sforce.soap.metadata.DebuggingHeader_element __header) {    __DebuggingHeader = __header ;  }    public MetadataConnection(ConnectorConfig config) throws ConnectionException {    this.__config = config;    this.__typeMapper.setPackagePrefix(null);    this.__typeMapper.setConfig(config);              __SessionHeader = new SessionHeader_element();      __SessionHeader.setSessionId(config.getSessionId());      }  private com.sforce.ws.transport.SoapConnection newConnection() {      com.sforce.ws.transport.SoapConnection __c   = new com.sforce.ws.transport.SoapConnection(           __config.getServiceEndpoint(), "null", __typeMapper, __config);      __c.setConnection(this);      __c.setKnownHeaders(knownHeaders);      return __c;   }    public com.sforce.soap.metadata.AsyncResult retrieve(com.sforce.soap.metadata.RetrieveRequest retrieveRequest)       throws com.sforce.ws.ConnectionException {    com.sforce.ws.transport.SoapConnection __connection = newConnection();    com.sforce.soap.metadata.Retrieve_element __request = new com.sforce.soap.metadata.Retrieve_element();    com.sforce.soap.metadata.RetrieveResponse_element __response = new com.sforce.soap.metadata.RetrieveResponse_element();      __request.setRetrieveRequest(retrieveRequest);        if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);        if (__CallOptions != null) __connection.addHeader(CallOptions_qname, __CallOptions);        addHeaders(__connection);    __response = (com.sforce.soap.metadata.RetrieveResponse_element) __connection.send("",       retrieve_qname, __request, retrieveResponse_qname,       com.sforce.soap.metadata.RetrieveResponse_element.class);    return __response.getResult();  }    public com.sforce.soap.metadata.DeployResult checkDeployStatus(java.lang.String asyncProcessId)       throws com.sforce.ws.ConnectionException {    com.sforce.ws.transport.SoapConnection __connection = newConnection();    com.sforce.soap.metadata.CheckDeployStatus_element __request = new com.sforce.soap.metadata.CheckDeployStatus_element();    com.sforce.soap.metadata.CheckDeployStatusResponse_element __response = new com.sforce.soap.metadata.CheckDeployStatusResponse_element();      __request.setAsyncProcessId(asyncProcessId);        if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);        if (__CallOptions != null) __connection.addHeader(CallOptions_qname, __CallOptions);        addHeaders(__connection);    __response = (com.sforce.soap.metadata.CheckDeployStatusResponse_element) __connection.send("",       checkDeployStatus_qname, __request, checkDeployStatusResponse_qname,       com.sforce.soap.metadata.CheckDeployStatusResponse_element.class);    return __response.getResult();  }    public com.sforce.soap.metadata.AsyncResult[] update(com.sforce.soap.metadata.UpdateMetadata[] UpdateMetadata)       throws com.sforce.ws.ConnectionException {    com.sforce.ws.transport.SoapConnection __connection = newConnection();    com.sforce.soap.metadata.Update_element __request = new com.sforce.soap.metadata.Update_element();    com.sforce.soap.metadata.UpdateResponse_element __response = new com.sforce.soap.metadata.UpdateResponse_element();      __request.setUpdateMetadata(UpdateMetadata);        if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);        if (__CallOptions != null) __connection.addHeader(CallOptions_qname, __CallOptions);        addHeaders(__connection);    __response = (com.sforce.soap.metadata.UpdateResponse_element) __connection.send("",       update_qname, __request, updateResponse_qname,       com.sforce.soap.metadata.UpdateResponse_element.class);    return __response.getResult();  }    public com.sforce.soap.metadata.FileProperties[] listMetadata(com.sforce.soap.metadata.ListMetadataQuery[] queries,double asOfVersion)       throws com.sforce.ws.ConnectionException {    com.sforce.ws.transport.SoapConnection __connection = newConnection();    com.sforce.soap.metadata.ListMetadata_element __request = new com.sforce.soap.metadata.ListMetadata_element();    com.sforce.soap.metadata.ListMetadataResponse_element __response = new com.sforce.soap.metadata.ListMetadataResponse_element();      __request.setQueries(queries);    __request.setAsOfVersion(asOfVersion);        if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);        if (__CallOptions != null) __connection.addHeader(CallOptions_qname, __CallOptions);        addHeaders(__connection);    __response = (com.sforce.soap.metadata.ListMetadataResponse_element) __connection.send("",       listMetadata_qname, __request, listMetadataResponse_qname,       com.sforce.soap.metadata.ListMetadataResponse_element.class);    return __response.getResult();  }    public com.sforce.soap.metadata.AsyncResult[] checkStatus(java.lang.String[] asyncProcessId)       throws com.sforce.ws.ConnectionException {    com.sforce.ws.transport.SoapConnection __connection = newConnection();    com.sforce.soap.metadata.CheckStatus_element __request = new com.sforce.soap.metadata.CheckStatus_element();    com.sforce.soap.metadata.CheckStatusResponse_element __response = new com.sforce.soap.metadata.CheckStatusResponse_element();      __request.setAsyncProcessId(asyncProcessId);        if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);        if (__CallOptions != null) __connection.addHeader(CallOptions_qname, __CallOptions);        addHeaders(__connection);    __response = (com.sforce.soap.metadata.CheckStatusResponse_element) __connection.send("",       checkStatus_qname, __request, checkStatusResponse_qname,       com.sforce.soap.metadata.CheckStatusResponse_element.class);    return __response.getResult();  }    public com.sforce.soap.metadata.AsyncResult[] create(com.sforce.soap.metadata.Metadata[] metadata)       throws com.sforce.ws.ConnectionException {    com.sforce.ws.transport.SoapConnection __connection = newConnection();    com.sforce.soap.metadata.Create_element __request = new com.sforce.soap.metadata.Create_element();    com.sforce.soap.metadata.CreateResponse_element __response = new com.sforce.soap.metadata.CreateResponse_element();      __request.setMetadata(metadata);        if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);        if (__CallOptions != null) __connection.addHeader(CallOptions_qname, __CallOptions);        addHeaders(__connection);    __response = (com.sforce.soap.metadata.CreateResponse_element) __connection.send("",       create_qname, __request, createResponse_qname,       com.sforce.soap.metadata.CreateResponse_element.class);    return __response.getResult();  }    public com.sforce.soap.metadata.RetrieveResult checkRetrieveStatus(java.lang.String asyncProcessId)       throws com.sforce.ws.ConnectionException {    com.sforce.ws.transport.SoapConnection __connection = newConnection();    com.sforce.soap.metadata.CheckRetrieveStatus_element __request = new com.sforce.soap.metadata.CheckRetrieveStatus_element();    com.sforce.soap.metadata.CheckRetrieveStatusResponse_element __response = new com.sforce.soap.metadata.CheckRetrieveStatusResponse_element();      __request.setAsyncProcessId(asyncProcessId);        if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);        if (__CallOptions != null) __connection.addHeader(CallOptions_qname, __CallOptions);        addHeaders(__connection);    __response = (com.sforce.soap.metadata.CheckRetrieveStatusResponse_element) __connection.send("",       checkRetrieveStatus_qname, __request, checkRetrieveStatusResponse_qname,       com.sforce.soap.metadata.CheckRetrieveStatusResponse_element.class);    return __response.getResult();  }    public com.sforce.soap.metadata.AsyncResult[] delete(com.sforce.soap.metadata.Metadata[] metadata)       throws com.sforce.ws.ConnectionException {    com.sforce.ws.transport.SoapConnection __connection = newConnection();    com.sforce.soap.metadata.Delete_element __request = new com.sforce.soap.metadata.Delete_element();    com.sforce.soap.metadata.DeleteResponse_element __response = new com.sforce.soap.metadata.DeleteResponse_element();      __request.setMetadata(metadata);        if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);        if (__CallOptions != null) __connection.addHeader(CallOptions_qname, __CallOptions);        addHeaders(__connection);    __response = (com.sforce.soap.metadata.DeleteResponse_element) __connection.send("",       delete_qname, __request, deleteResponse_qname,       com.sforce.soap.metadata.DeleteResponse_element.class);    return __response.getResult();  }    public com.sforce.soap.metadata.DescribeMetadataResult describeMetadata(double asOfVersion)       throws com.sforce.ws.ConnectionException {    com.sforce.ws.transport.SoapConnection __connection = newConnection();    com.sforce.soap.metadata.DescribeMetadata_element __request = new com.sforce.soap.metadata.DescribeMetadata_element();    com.sforce.soap.metadata.DescribeMetadataResponse_element __response = new com.sforce.soap.metadata.DescribeMetadataResponse_element();      __request.setAsOfVersion(asOfVersion);        if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);        if (__CallOptions != null) __connection.addHeader(CallOptions_qname, __CallOptions);        addHeaders(__connection);    __response = (com.sforce.soap.metadata.DescribeMetadataResponse_element) __connection.send("",       describeMetadata_qname, __request, describeMetadataResponse_qname,       com.sforce.soap.metadata.DescribeMetadataResponse_element.class);    return __response.getResult();  }    public com.sforce.soap.metadata.AsyncResult deploy(byte[] ZipFile,com.sforce.soap.metadata.DeployOptions DeployOptions)       throws com.sforce.ws.ConnectionException {    com.sforce.ws.transport.SoapConnection __connection = newConnection();    com.sforce.soap.metadata.Deploy_element __request = new com.sforce.soap.metadata.Deploy_element();    com.sforce.soap.metadata.DeployResponse_element __response = new com.sforce.soap.metadata.DeployResponse_element();      __request.setZipFile(ZipFile);    __request.setDeployOptions(DeployOptions);        if (__SessionHeader != null) __connection.addHeader(SessionHeader_qname, __SessionHeader);        if (__DebuggingHeader != null) __connection.addHeader(DebuggingHeader_qname, __DebuggingHeader);        if (__CallOptions != null) __connection.addHeader(CallOptions_qname, __CallOptions);        addHeaders(__connection);    __response = (com.sforce.soap.metadata.DeployResponse_element) __connection.send("",       deploy_qname, __request, deployResponse_qname,       com.sforce.soap.metadata.DeployResponse_element.class);    return __response.getResult();  }    private void addHeaders(com.sforce.ws.transport.SoapConnection __connection) {    for(java.util.Map.Entry<QName, XMLizable> entry : __extraHeaders.entrySet()) {      __connection.addHeader(entry.getKey(), entry.getValue());    }  }  public void addExtraHeader(QName __headerName, XMLizable __value) {    __extraHeaders.put(__headerName, __value);  }	public void removeExtraHeader(QName __headerName) {		__extraHeaders.remove(__headerName);	}	public XMLizable getExtraHeader(QName __headerName) {		return __extraHeaders.get(__headerName);	}		public void clearExtraHeaders() {		__extraHeaders = new HashMap<QName, XMLizable>();	}    private static final javax.xml.namespace.QName retrieve_qname = new javax.xml.namespace.QName("http://soap.sforce.com/2006/04/metadata", "retrieve");
    private static final javax.xml.namespace.QName retrieveResponse_qname = new javax.xml.namespace.QName("http://soap.sforce.com/2006/04/metadata", "retrieveResponse");
    private static final javax.xml.namespace.QName checkDeployStatus_qname = new javax.xml.namespace.QName("http://soap.sforce.com/2006/04/metadata", "checkDeployStatus");
    private static final javax.xml.namespace.QName checkDeployStatusResponse_qname = new javax.xml.namespace.QName("http://soap.sforce.com/2006/04/metadata", "checkDeployStatusResponse");
    private static final javax.xml.namespace.QName update_qname = new javax.xml.namespace.QName("http://soap.sforce.com/2006/04/metadata", "update");
    private static final javax.xml.namespace.QName updateResponse_qname = new javax.xml.namespace.QName("http://soap.sforce.com/2006/04/metadata", "updateResponse");
    private static final javax.xml.namespace.QName listMetadata_qname = new javax.xml.namespace.QName("http://soap.sforce.com/2006/04/metadata", "listMetadata");
    private static final javax.xml.namespace.QName listMetadataResponse_qname = new javax.xml.namespace.QName("http://soap.sforce.com/2006/04/metadata", "listMetadataResponse");
    private static final javax.xml.namespace.QName checkStatus_qname = new javax.xml.namespace.QName("http://soap.sforce.com/2006/04/metadata", "checkStatus");
    private static final javax.xml.namespace.QName checkStatusResponse_qname = new javax.xml.namespace.QName("http://soap.sforce.com/2006/04/metadata", "checkStatusResponse");
    private static final javax.xml.namespace.QName create_qname = new javax.xml.namespace.QName("http://soap.sforce.com/2006/04/metadata", "create");
    private static final javax.xml.namespace.QName createResponse_qname = new javax.xml.namespace.QName("http://soap.sforce.com/2006/04/metadata", "createResponse");
    private static final javax.xml.namespace.QName checkRetrieveStatus_qname = new javax.xml.namespace.QName("http://soap.sforce.com/2006/04/metadata", "checkRetrieveStatus");
    private static final javax.xml.namespace.QName checkRetrieveStatusResponse_qname = new javax.xml.namespace.QName("http://soap.sforce.com/2006/04/metadata", "checkRetrieveStatusResponse");
    private static final javax.xml.namespace.QName delete_qname = new javax.xml.namespace.QName("http://soap.sforce.com/2006/04/metadata", "delete");
    private static final javax.xml.namespace.QName deleteResponse_qname = new javax.xml.namespace.QName("http://soap.sforce.com/2006/04/metadata", "deleteResponse");
    private static final javax.xml.namespace.QName describeMetadata_qname = new javax.xml.namespace.QName("http://soap.sforce.com/2006/04/metadata", "describeMetadata");
    private static final javax.xml.namespace.QName describeMetadataResponse_qname = new javax.xml.namespace.QName("http://soap.sforce.com/2006/04/metadata", "describeMetadataResponse");
    private static final javax.xml.namespace.QName deploy_qname = new javax.xml.namespace.QName("http://soap.sforce.com/2006/04/metadata", "deploy");
    private static final javax.xml.namespace.QName deployResponse_qname = new javax.xml.namespace.QName("http://soap.sforce.com/2006/04/metadata", "deployResponse");
    private static final javax.xml.namespace.QName SessionHeader_qname = new javax.xml.namespace.QName("http://soap.sforce.com/2006/04/metadata", "SessionHeader");
    private static final javax.xml.namespace.QName DebuggingInfo_qname = new javax.xml.namespace.QName("http://soap.sforce.com/2006/04/metadata", "DebuggingInfo");
    private static final javax.xml.namespace.QName CallOptions_qname = new javax.xml.namespace.QName("http://soap.sforce.com/2006/04/metadata", "CallOptions");
    private static final javax.xml.namespace.QName DebuggingHeader_qname = new javax.xml.namespace.QName("http://soap.sforce.com/2006/04/metadata", "DebuggingHeader");
  private static HashMap<QName, java.lang.Class> knownHeaders = new HashMap<QName, java.lang.Class>();  static {  knownHeaders.put(SessionHeader_qname,com.sforce.soap.metadata.SessionHeader_element.class);
  knownHeaders.put(DebuggingInfo_qname,com.sforce.soap.metadata.DebuggingInfo_element.class);
  knownHeaders.put(CallOptions_qname,com.sforce.soap.metadata.CallOptions_element.class);
  knownHeaders.put(DebuggingHeader_qname,com.sforce.soap.metadata.DebuggingHeader_element.class);
  }}