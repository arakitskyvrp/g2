package com.sforce.soap.metadata;/** * Generated class, please do not edit. */public class Country implements com.sforce.ws.bind.XMLizable {  /**   * Constructor   */  public Country() {  }        /**   * element  : active of type {http://www.w3.org/2001/XMLSchema}boolean   * java type: boolean   */  private static final com.sforce.ws.bind.TypeInfo active__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","active","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);  private boolean active__is_set = false;  private boolean active;  public boolean getActive() {    return active;  }    public boolean isActive() {    return active;  }    public void setActive(boolean active) {    this.active = active;    active__is_set = true;  }    /**   * element  : integrationValue of type {http://www.w3.org/2001/XMLSchema}string   * java type: java.lang.String   */  private static final com.sforce.ws.bind.TypeInfo integrationValue__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","integrationValue","http://www.w3.org/2001/XMLSchema","string",1,1,true);  private boolean integrationValue__is_set = false;  private java.lang.String integrationValue;  public java.lang.String getIntegrationValue() {    return integrationValue;  }    public void setIntegrationValue(java.lang.String integrationValue) {    this.integrationValue = integrationValue;    integrationValue__is_set = true;  }    /**   * element  : isoCode of type {http://www.w3.org/2001/XMLSchema}string   * java type: java.lang.String   */  private static final com.sforce.ws.bind.TypeInfo isoCode__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","isoCode","http://www.w3.org/2001/XMLSchema","string",1,1,true);  private boolean isoCode__is_set = false;  private java.lang.String isoCode;  public java.lang.String getIsoCode() {    return isoCode;  }    public void setIsoCode(java.lang.String isoCode) {    this.isoCode = isoCode;    isoCode__is_set = true;  }    /**   * element  : label of type {http://www.w3.org/2001/XMLSchema}string   * java type: java.lang.String   */  private static final com.sforce.ws.bind.TypeInfo label__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","label","http://www.w3.org/2001/XMLSchema","string",1,1,true);  private boolean label__is_set = false;  private java.lang.String label;  public java.lang.String getLabel() {    return label;  }    public void setLabel(java.lang.String label) {    this.label = label;    label__is_set = true;  }    /**   * element  : states of type {http://soap.sforce.com/2006/04/metadata}State   * java type: com.sforce.soap.metadata.State[]   */  private static final com.sforce.ws.bind.TypeInfo states__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","states","http://soap.sforce.com/2006/04/metadata","State",0,-1,true);  private boolean states__is_set = false;  private com.sforce.soap.metadata.State[] states = new com.sforce.soap.metadata.State[0];  public com.sforce.soap.metadata.State[] getStates() {    return states;  }    public void setStates(com.sforce.soap.metadata.State[] states) {    this.states = states;    states__is_set = true;  }    /**   */  public void write(javax.xml.namespace.QName __element,      com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)      throws java.io.IOException {    __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());        writeFields(__out, __typeMapper);    __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());  }  protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,      com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {       __typeMapper.writeBoolean(__out, active__typeInfo, active, active__is_set);    __typeMapper.writeString(__out, integrationValue__typeInfo, integrationValue, integrationValue__is_set);    __typeMapper.writeString(__out, isoCode__typeInfo, isoCode, isoCode__is_set);    __typeMapper.writeString(__out, label__typeInfo, label, label__is_set);    __typeMapper.writeObject(__out, states__typeInfo, states, states__is_set);  }  public void load(com.sforce.ws.parser.XmlInputStream __in,      com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {    __typeMapper.consumeStartTag(__in);    loadFields(__in, __typeMapper);    __typeMapper.consumeEndTag(__in);  }  protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,      com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {       __in.peekTag();    if (__typeMapper.verifyElement(__in, active__typeInfo)) {      setActive((boolean)__typeMapper.readBoolean(__in, active__typeInfo, boolean.class));    }    __in.peekTag();    if (__typeMapper.verifyElement(__in, integrationValue__typeInfo)) {      setIntegrationValue((java.lang.String)__typeMapper.readString(__in, integrationValue__typeInfo, java.lang.String.class));    }    __in.peekTag();    if (__typeMapper.verifyElement(__in, isoCode__typeInfo)) {      setIsoCode((java.lang.String)__typeMapper.readString(__in, isoCode__typeInfo, java.lang.String.class));    }    __in.peekTag();    if (__typeMapper.verifyElement(__in, label__typeInfo)) {      setLabel((java.lang.String)__typeMapper.readString(__in, label__typeInfo, java.lang.String.class));    }    __in.peekTag();    if (__typeMapper.isElement(__in, states__typeInfo)) {      setStates((com.sforce.soap.metadata.State[])__typeMapper.readObject(__in, states__typeInfo, com.sforce.soap.metadata.State[].class));    }  }  public String toString() {    java.lang.StringBuilder sb = new java.lang.StringBuilder();    sb.append("[Country ");        sb.append(" active=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(active)+"'\n");    sb.append(" integrationValue=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(integrationValue)+"'\n");    sb.append(" isoCode=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(isoCode)+"'\n");    sb.append(" label=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(label)+"'\n");    sb.append(" states=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(states)+"'\n");    sb.append("]\n");    return sb.toString();  }}