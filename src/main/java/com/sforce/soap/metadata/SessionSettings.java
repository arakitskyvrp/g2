package com.sforce.soap.metadata;/** * Generated class, please do not edit. */public class SessionSettings implements com.sforce.ws.bind.XMLizable {  /**   * Constructor   */  public SessionSettings() {  }        /**   * element  : disableTimeoutWarning of type {http://www.w3.org/2001/XMLSchema}boolean   * java type: boolean   */  private static final com.sforce.ws.bind.TypeInfo disableTimeoutWarning__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","disableTimeoutWarning","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);  private boolean disableTimeoutWarning__is_set = false;  private boolean disableTimeoutWarning;  public boolean getDisableTimeoutWarning() {    return disableTimeoutWarning;  }    public boolean isDisableTimeoutWarning() {    return disableTimeoutWarning;  }    public void setDisableTimeoutWarning(boolean disableTimeoutWarning) {    this.disableTimeoutWarning = disableTimeoutWarning;    disableTimeoutWarning__is_set = true;  }    /**   * element  : enableCSRFOnGet of type {http://www.w3.org/2001/XMLSchema}boolean   * java type: boolean   */  private static final com.sforce.ws.bind.TypeInfo enableCSRFOnGet__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","enableCSRFOnGet","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);  private boolean enableCSRFOnGet__is_set = false;  private boolean enableCSRFOnGet;  public boolean getEnableCSRFOnGet() {    return enableCSRFOnGet;  }    public boolean isEnableCSRFOnGet() {    return enableCSRFOnGet;  }    public void setEnableCSRFOnGet(boolean enableCSRFOnGet) {    this.enableCSRFOnGet = enableCSRFOnGet;    enableCSRFOnGet__is_set = true;  }    /**   * element  : enableCSRFOnPost of type {http://www.w3.org/2001/XMLSchema}boolean   * java type: boolean   */  private static final com.sforce.ws.bind.TypeInfo enableCSRFOnPost__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","enableCSRFOnPost","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);  private boolean enableCSRFOnPost__is_set = false;  private boolean enableCSRFOnPost;  public boolean getEnableCSRFOnPost() {    return enableCSRFOnPost;  }    public boolean isEnableCSRFOnPost() {    return enableCSRFOnPost;  }    public void setEnableCSRFOnPost(boolean enableCSRFOnPost) {    this.enableCSRFOnPost = enableCSRFOnPost;    enableCSRFOnPost__is_set = true;  }    /**   * element  : enableCacheAndAutocomplete of type {http://www.w3.org/2001/XMLSchema}boolean   * java type: boolean   */  private static final com.sforce.ws.bind.TypeInfo enableCacheAndAutocomplete__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","enableCacheAndAutocomplete","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);  private boolean enableCacheAndAutocomplete__is_set = false;  private boolean enableCacheAndAutocomplete;  public boolean getEnableCacheAndAutocomplete() {    return enableCacheAndAutocomplete;  }    public boolean isEnableCacheAndAutocomplete() {    return enableCacheAndAutocomplete;  }    public void setEnableCacheAndAutocomplete(boolean enableCacheAndAutocomplete) {    this.enableCacheAndAutocomplete = enableCacheAndAutocomplete;    enableCacheAndAutocomplete__is_set = true;  }    /**   * element  : enableClickjackNonsetupSFDC of type {http://www.w3.org/2001/XMLSchema}boolean   * java type: boolean   */  private static final com.sforce.ws.bind.TypeInfo enableClickjackNonsetupSFDC__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","enableClickjackNonsetupSFDC","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);  private boolean enableClickjackNonsetupSFDC__is_set = false;  private boolean enableClickjackNonsetupSFDC;  public boolean getEnableClickjackNonsetupSFDC() {    return enableClickjackNonsetupSFDC;  }    public boolean isEnableClickjackNonsetupSFDC() {    return enableClickjackNonsetupSFDC;  }    public void setEnableClickjackNonsetupSFDC(boolean enableClickjackNonsetupSFDC) {    this.enableClickjackNonsetupSFDC = enableClickjackNonsetupSFDC;    enableClickjackNonsetupSFDC__is_set = true;  }    /**   * element  : enableClickjackNonsetupUser of type {http://www.w3.org/2001/XMLSchema}boolean   * java type: boolean   */  private static final com.sforce.ws.bind.TypeInfo enableClickjackNonsetupUser__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","enableClickjackNonsetupUser","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);  private boolean enableClickjackNonsetupUser__is_set = false;  private boolean enableClickjackNonsetupUser;  public boolean getEnableClickjackNonsetupUser() {    return enableClickjackNonsetupUser;  }    public boolean isEnableClickjackNonsetupUser() {    return enableClickjackNonsetupUser;  }    public void setEnableClickjackNonsetupUser(boolean enableClickjackNonsetupUser) {    this.enableClickjackNonsetupUser = enableClickjackNonsetupUser;    enableClickjackNonsetupUser__is_set = true;  }    /**   * element  : enableClickjackSetup of type {http://www.w3.org/2001/XMLSchema}boolean   * java type: boolean   */  private static final com.sforce.ws.bind.TypeInfo enableClickjackSetup__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","enableClickjackSetup","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);  private boolean enableClickjackSetup__is_set = false;  private boolean enableClickjackSetup;  public boolean getEnableClickjackSetup() {    return enableClickjackSetup;  }    public boolean isEnableClickjackSetup() {    return enableClickjackSetup;  }    public void setEnableClickjackSetup(boolean enableClickjackSetup) {    this.enableClickjackSetup = enableClickjackSetup;    enableClickjackSetup__is_set = true;  }    /**   * element  : enableSMSIdentity of type {http://www.w3.org/2001/XMLSchema}boolean   * java type: boolean   */  private static final com.sforce.ws.bind.TypeInfo enableSMSIdentity__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","enableSMSIdentity","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);  private boolean enableSMSIdentity__is_set = false;  private boolean enableSMSIdentity;  public boolean getEnableSMSIdentity() {    return enableSMSIdentity;  }    public boolean isEnableSMSIdentity() {    return enableSMSIdentity;  }    public void setEnableSMSIdentity(boolean enableSMSIdentity) {    this.enableSMSIdentity = enableSMSIdentity;    enableSMSIdentity__is_set = true;  }    /**   * element  : forceRelogin of type {http://www.w3.org/2001/XMLSchema}boolean   * java type: boolean   */  private static final com.sforce.ws.bind.TypeInfo forceRelogin__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","forceRelogin","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);  private boolean forceRelogin__is_set = false;  private boolean forceRelogin;  public boolean getForceRelogin() {    return forceRelogin;  }    public boolean isForceRelogin() {    return forceRelogin;  }    public void setForceRelogin(boolean forceRelogin) {    this.forceRelogin = forceRelogin;    forceRelogin__is_set = true;  }    /**   * element  : lockSessionsToIp of type {http://www.w3.org/2001/XMLSchema}boolean   * java type: boolean   */  private static final com.sforce.ws.bind.TypeInfo lockSessionsToIp__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","lockSessionsToIp","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);  private boolean lockSessionsToIp__is_set = false;  private boolean lockSessionsToIp;  public boolean getLockSessionsToIp() {    return lockSessionsToIp;  }    public boolean isLockSessionsToIp() {    return lockSessionsToIp;  }    public void setLockSessionsToIp(boolean lockSessionsToIp) {    this.lockSessionsToIp = lockSessionsToIp;    lockSessionsToIp__is_set = true;  }    /**   * element  : sessionTimeout of type {http://soap.sforce.com/2006/04/metadata}SessionTimeout   * java type: com.sforce.soap.metadata.SessionTimeout   */  private static final com.sforce.ws.bind.TypeInfo sessionTimeout__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","sessionTimeout","http://soap.sforce.com/2006/04/metadata","SessionTimeout",0,1,true);  private boolean sessionTimeout__is_set = false;  private com.sforce.soap.metadata.SessionTimeout sessionTimeout;  public com.sforce.soap.metadata.SessionTimeout getSessionTimeout() {    return sessionTimeout;  }    public void setSessionTimeout(com.sforce.soap.metadata.SessionTimeout sessionTimeout) {    this.sessionTimeout = sessionTimeout;    sessionTimeout__is_set = true;  }    /**   */  public void write(javax.xml.namespace.QName __element,      com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)      throws java.io.IOException {    __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());        writeFields(__out, __typeMapper);    __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());  }  protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,      com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {       __typeMapper.writeBoolean(__out, disableTimeoutWarning__typeInfo, disableTimeoutWarning, disableTimeoutWarning__is_set);    __typeMapper.writeBoolean(__out, enableCSRFOnGet__typeInfo, enableCSRFOnGet, enableCSRFOnGet__is_set);    __typeMapper.writeBoolean(__out, enableCSRFOnPost__typeInfo, enableCSRFOnPost, enableCSRFOnPost__is_set);    __typeMapper.writeBoolean(__out, enableCacheAndAutocomplete__typeInfo, enableCacheAndAutocomplete, enableCacheAndAutocomplete__is_set);    __typeMapper.writeBoolean(__out, enableClickjackNonsetupSFDC__typeInfo, enableClickjackNonsetupSFDC, enableClickjackNonsetupSFDC__is_set);    __typeMapper.writeBoolean(__out, enableClickjackNonsetupUser__typeInfo, enableClickjackNonsetupUser, enableClickjackNonsetupUser__is_set);    __typeMapper.writeBoolean(__out, enableClickjackSetup__typeInfo, enableClickjackSetup, enableClickjackSetup__is_set);    __typeMapper.writeBoolean(__out, enableSMSIdentity__typeInfo, enableSMSIdentity, enableSMSIdentity__is_set);    __typeMapper.writeBoolean(__out, forceRelogin__typeInfo, forceRelogin, forceRelogin__is_set);    __typeMapper.writeBoolean(__out, lockSessionsToIp__typeInfo, lockSessionsToIp, lockSessionsToIp__is_set);    __typeMapper.writeObject(__out, sessionTimeout__typeInfo, sessionTimeout, sessionTimeout__is_set);  }  public void load(com.sforce.ws.parser.XmlInputStream __in,      com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {    __typeMapper.consumeStartTag(__in);    loadFields(__in, __typeMapper);    __typeMapper.consumeEndTag(__in);  }  protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,      com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {       __in.peekTag();    if (__typeMapper.isElement(__in, disableTimeoutWarning__typeInfo)) {      setDisableTimeoutWarning((boolean)__typeMapper.readBoolean(__in, disableTimeoutWarning__typeInfo, boolean.class));    }    __in.peekTag();    if (__typeMapper.isElement(__in, enableCSRFOnGet__typeInfo)) {      setEnableCSRFOnGet((boolean)__typeMapper.readBoolean(__in, enableCSRFOnGet__typeInfo, boolean.class));    }    __in.peekTag();    if (__typeMapper.isElement(__in, enableCSRFOnPost__typeInfo)) {      setEnableCSRFOnPost((boolean)__typeMapper.readBoolean(__in, enableCSRFOnPost__typeInfo, boolean.class));    }    __in.peekTag();    if (__typeMapper.isElement(__in, enableCacheAndAutocomplete__typeInfo)) {      setEnableCacheAndAutocomplete((boolean)__typeMapper.readBoolean(__in, enableCacheAndAutocomplete__typeInfo, boolean.class));    }    __in.peekTag();    if (__typeMapper.isElement(__in, enableClickjackNonsetupSFDC__typeInfo)) {      setEnableClickjackNonsetupSFDC((boolean)__typeMapper.readBoolean(__in, enableClickjackNonsetupSFDC__typeInfo, boolean.class));    }    __in.peekTag();    if (__typeMapper.isElement(__in, enableClickjackNonsetupUser__typeInfo)) {      setEnableClickjackNonsetupUser((boolean)__typeMapper.readBoolean(__in, enableClickjackNonsetupUser__typeInfo, boolean.class));    }    __in.peekTag();    if (__typeMapper.isElement(__in, enableClickjackSetup__typeInfo)) {      setEnableClickjackSetup((boolean)__typeMapper.readBoolean(__in, enableClickjackSetup__typeInfo, boolean.class));    }    __in.peekTag();    if (__typeMapper.isElement(__in, enableSMSIdentity__typeInfo)) {      setEnableSMSIdentity((boolean)__typeMapper.readBoolean(__in, enableSMSIdentity__typeInfo, boolean.class));    }    __in.peekTag();    if (__typeMapper.isElement(__in, forceRelogin__typeInfo)) {      setForceRelogin((boolean)__typeMapper.readBoolean(__in, forceRelogin__typeInfo, boolean.class));    }    __in.peekTag();    if (__typeMapper.isElement(__in, lockSessionsToIp__typeInfo)) {      setLockSessionsToIp((boolean)__typeMapper.readBoolean(__in, lockSessionsToIp__typeInfo, boolean.class));    }    __in.peekTag();    if (__typeMapper.isElement(__in, sessionTimeout__typeInfo)) {      setSessionTimeout((com.sforce.soap.metadata.SessionTimeout)__typeMapper.readObject(__in, sessionTimeout__typeInfo, com.sforce.soap.metadata.SessionTimeout.class));    }  }  public String toString() {    java.lang.StringBuilder sb = new java.lang.StringBuilder();    sb.append("[SessionSettings ");        sb.append(" disableTimeoutWarning=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(disableTimeoutWarning)+"'\n");    sb.append(" enableCSRFOnGet=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(enableCSRFOnGet)+"'\n");    sb.append(" enableCSRFOnPost=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(enableCSRFOnPost)+"'\n");    sb.append(" enableCacheAndAutocomplete=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(enableCacheAndAutocomplete)+"'\n");    sb.append(" enableClickjackNonsetupSFDC=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(enableClickjackNonsetupSFDC)+"'\n");    sb.append(" enableClickjackNonsetupUser=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(enableClickjackNonsetupUser)+"'\n");    sb.append(" enableClickjackSetup=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(enableClickjackSetup)+"'\n");    sb.append(" enableSMSIdentity=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(enableSMSIdentity)+"'\n");    sb.append(" forceRelogin=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(forceRelogin)+"'\n");    sb.append(" lockSessionsToIp=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(lockSessionsToIp)+"'\n");    sb.append(" sessionTimeout=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(sessionTimeout)+"'\n");    sb.append("]\n");    return sb.toString();  }}