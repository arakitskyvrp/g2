package com.sforce.soap.metadata;/** * Generated class, please do not edit. */public class Scontrol extends com.sforce.soap.metadata.MetadataWithContent {  /**   * Constructor   */  public Scontrol() {  }        /**   * element  : contentSource of type {http://soap.sforce.com/2006/04/metadata}SControlContentSource   * java type: com.sforce.soap.metadata.SControlContentSource   */  private static final com.sforce.ws.bind.TypeInfo contentSource__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","contentSource","http://soap.sforce.com/2006/04/metadata","SControlContentSource",1,1,true);  private boolean contentSource__is_set = false;  private com.sforce.soap.metadata.SControlContentSource contentSource;  public com.sforce.soap.metadata.SControlContentSource getContentSource() {    return contentSource;  }    public void setContentSource(com.sforce.soap.metadata.SControlContentSource contentSource) {    this.contentSource = contentSource;    contentSource__is_set = true;  }    /**   * element  : description of type {http://www.w3.org/2001/XMLSchema}string   * java type: java.lang.String   */  private static final com.sforce.ws.bind.TypeInfo description__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","description","http://www.w3.org/2001/XMLSchema","string",0,1,true);  private boolean description__is_set = false;  private java.lang.String description;  public java.lang.String getDescription() {    return description;  }    public void setDescription(java.lang.String description) {    this.description = description;    description__is_set = true;  }    /**   * element  : encodingKey of type {http://soap.sforce.com/2006/04/metadata}Encoding   * java type: com.sforce.soap.metadata.Encoding   */  private static final com.sforce.ws.bind.TypeInfo encodingKey__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","encodingKey","http://soap.sforce.com/2006/04/metadata","Encoding",1,1,true);  private boolean encodingKey__is_set = false;  private com.sforce.soap.metadata.Encoding encodingKey;  public com.sforce.soap.metadata.Encoding getEncodingKey() {    return encodingKey;  }    public void setEncodingKey(com.sforce.soap.metadata.Encoding encodingKey) {    this.encodingKey = encodingKey;    encodingKey__is_set = true;  }    /**   * element  : fileContent of type {http://www.w3.org/2001/XMLSchema}base64Binary   * java type: byte[]   */  private static final com.sforce.ws.bind.TypeInfo fileContent__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","fileContent","http://www.w3.org/2001/XMLSchema","base64Binary",0,1,true);  private boolean fileContent__is_set = false;  private byte[] fileContent;  public byte[] getFileContent() {    return fileContent;  }    public void setFileContent(byte[] fileContent) {    this.fileContent = fileContent;    fileContent__is_set = true;  }    /**   * element  : fileName of type {http://www.w3.org/2001/XMLSchema}string   * java type: java.lang.String   */  private static final com.sforce.ws.bind.TypeInfo fileName__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","fileName","http://www.w3.org/2001/XMLSchema","string",0,1,true);  private boolean fileName__is_set = false;  private java.lang.String fileName;  public java.lang.String getFileName() {    return fileName;  }    public void setFileName(java.lang.String fileName) {    this.fileName = fileName;    fileName__is_set = true;  }    /**   * element  : name of type {http://www.w3.org/2001/XMLSchema}string   * java type: java.lang.String   */  private static final com.sforce.ws.bind.TypeInfo name__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","name","http://www.w3.org/2001/XMLSchema","string",1,1,true);  private boolean name__is_set = false;  private java.lang.String name;  public java.lang.String getName() {    return name;  }    public void setName(java.lang.String name) {    this.name = name;    name__is_set = true;  }    /**   * element  : supportsCaching of type {http://www.w3.org/2001/XMLSchema}boolean   * java type: boolean   */  private static final com.sforce.ws.bind.TypeInfo supportsCaching__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","supportsCaching","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);  private boolean supportsCaching__is_set = false;  private boolean supportsCaching;  public boolean getSupportsCaching() {    return supportsCaching;  }    public boolean isSupportsCaching() {    return supportsCaching;  }    public void setSupportsCaching(boolean supportsCaching) {    this.supportsCaching = supportsCaching;    supportsCaching__is_set = true;  }    /**   */  public void write(javax.xml.namespace.QName __element,      com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)      throws java.io.IOException {    __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());    __typeMapper.writeXsiType(__out, "http://soap.sforce.com/2006/04/metadata", "Scontrol");    writeFields(__out, __typeMapper);    __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());  }  protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,      com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {   super.writeFields(__out, __typeMapper);    __typeMapper.writeObject(__out, contentSource__typeInfo, contentSource, contentSource__is_set);    __typeMapper.writeString(__out, description__typeInfo, description, description__is_set);    __typeMapper.writeObject(__out, encodingKey__typeInfo, encodingKey, encodingKey__is_set);    __typeMapper.writeObject(__out, fileContent__typeInfo, fileContent, fileContent__is_set);    __typeMapper.writeString(__out, fileName__typeInfo, fileName, fileName__is_set);    __typeMapper.writeString(__out, name__typeInfo, name, name__is_set);    __typeMapper.writeBoolean(__out, supportsCaching__typeInfo, supportsCaching, supportsCaching__is_set);  }  public void load(com.sforce.ws.parser.XmlInputStream __in,      com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {    __typeMapper.consumeStartTag(__in);    loadFields(__in, __typeMapper);    __typeMapper.consumeEndTag(__in);  }  protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,      com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {   super.loadFields(__in, __typeMapper);    __in.peekTag();    if (__typeMapper.verifyElement(__in, contentSource__typeInfo)) {      setContentSource((com.sforce.soap.metadata.SControlContentSource)__typeMapper.readObject(__in, contentSource__typeInfo, com.sforce.soap.metadata.SControlContentSource.class));    }    __in.peekTag();    if (__typeMapper.isElement(__in, description__typeInfo)) {      setDescription((java.lang.String)__typeMapper.readString(__in, description__typeInfo, java.lang.String.class));    }    __in.peekTag();    if (__typeMapper.verifyElement(__in, encodingKey__typeInfo)) {      setEncodingKey((com.sforce.soap.metadata.Encoding)__typeMapper.readObject(__in, encodingKey__typeInfo, com.sforce.soap.metadata.Encoding.class));    }    __in.peekTag();    if (__typeMapper.isElement(__in, fileContent__typeInfo)) {      setFileContent((byte[])__typeMapper.readObject(__in, fileContent__typeInfo, byte[].class));    }    __in.peekTag();    if (__typeMapper.isElement(__in, fileName__typeInfo)) {      setFileName((java.lang.String)__typeMapper.readString(__in, fileName__typeInfo, java.lang.String.class));    }    __in.peekTag();    if (__typeMapper.verifyElement(__in, name__typeInfo)) {      setName((java.lang.String)__typeMapper.readString(__in, name__typeInfo, java.lang.String.class));    }    __in.peekTag();    if (__typeMapper.verifyElement(__in, supportsCaching__typeInfo)) {      setSupportsCaching((boolean)__typeMapper.readBoolean(__in, supportsCaching__typeInfo, boolean.class));    }  }  public String toString() {    java.lang.StringBuilder sb = new java.lang.StringBuilder();    sb.append("[Scontrol ");    sb.append(super.toString());    sb.append(" contentSource=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(contentSource)+"'\n");    sb.append(" description=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(description)+"'\n");    sb.append(" encodingKey=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(encodingKey)+"'\n");    sb.append(" fileContent=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(fileContent)+"'\n");    sb.append(" fileName=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(fileName)+"'\n");    sb.append(" name=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(name)+"'\n");    sb.append(" supportsCaching=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(supportsCaching)+"'\n");    sb.append("]\n");    return sb.toString();  }}