package com.sforce.soap.metadata;/** * Generated class, please do not edit. */public class PasswordPolicies implements com.sforce.ws.bind.XMLizable {  /**   * Constructor   */  public PasswordPolicies() {  }        /**   * element  : apiOnlyUserHomePageURL of type {http://www.w3.org/2001/XMLSchema}string   * java type: java.lang.String   */  private static final com.sforce.ws.bind.TypeInfo apiOnlyUserHomePageURL__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","apiOnlyUserHomePageURL","http://www.w3.org/2001/XMLSchema","string",0,1,true);  private boolean apiOnlyUserHomePageURL__is_set = false;  private java.lang.String apiOnlyUserHomePageURL;  public java.lang.String getApiOnlyUserHomePageURL() {    return apiOnlyUserHomePageURL;  }    public void setApiOnlyUserHomePageURL(java.lang.String apiOnlyUserHomePageURL) {    this.apiOnlyUserHomePageURL = apiOnlyUserHomePageURL;    apiOnlyUserHomePageURL__is_set = true;  }    /**   * element  : complexity of type {http://soap.sforce.com/2006/04/metadata}Complexity   * java type: com.sforce.soap.metadata.Complexity   */  private static final com.sforce.ws.bind.TypeInfo complexity__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","complexity","http://soap.sforce.com/2006/04/metadata","Complexity",0,1,true);  private boolean complexity__is_set = false;  private com.sforce.soap.metadata.Complexity complexity;  public com.sforce.soap.metadata.Complexity getComplexity() {    return complexity;  }    public void setComplexity(com.sforce.soap.metadata.Complexity complexity) {    this.complexity = complexity;    complexity__is_set = true;  }    /**   * element  : expiration of type {http://soap.sforce.com/2006/04/metadata}Expiration   * java type: com.sforce.soap.metadata.Expiration   */  private static final com.sforce.ws.bind.TypeInfo expiration__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","expiration","http://soap.sforce.com/2006/04/metadata","Expiration",0,1,true);  private boolean expiration__is_set = false;  private com.sforce.soap.metadata.Expiration expiration;  public com.sforce.soap.metadata.Expiration getExpiration() {    return expiration;  }    public void setExpiration(com.sforce.soap.metadata.Expiration expiration) {    this.expiration = expiration;    expiration__is_set = true;  }    /**   * element  : historyRestriction of type {http://www.w3.org/2001/XMLSchema}string   * java type: java.lang.String   */  private static final com.sforce.ws.bind.TypeInfo historyRestriction__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","historyRestriction","http://www.w3.org/2001/XMLSchema","string",0,1,true);  private boolean historyRestriction__is_set = false;  private java.lang.String historyRestriction;  public java.lang.String getHistoryRestriction() {    return historyRestriction;  }    public void setHistoryRestriction(java.lang.String historyRestriction) {    this.historyRestriction = historyRestriction;    historyRestriction__is_set = true;  }    /**   * element  : lockoutInterval of type {http://soap.sforce.com/2006/04/metadata}LockoutInterval   * java type: com.sforce.soap.metadata.LockoutInterval   */  private static final com.sforce.ws.bind.TypeInfo lockoutInterval__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","lockoutInterval","http://soap.sforce.com/2006/04/metadata","LockoutInterval",0,1,true);  private boolean lockoutInterval__is_set = false;  private com.sforce.soap.metadata.LockoutInterval lockoutInterval;  public com.sforce.soap.metadata.LockoutInterval getLockoutInterval() {    return lockoutInterval;  }    public void setLockoutInterval(com.sforce.soap.metadata.LockoutInterval lockoutInterval) {    this.lockoutInterval = lockoutInterval;    lockoutInterval__is_set = true;  }    /**   * element  : maxLoginAttempts of type {http://soap.sforce.com/2006/04/metadata}MaxLoginAttempts   * java type: com.sforce.soap.metadata.MaxLoginAttempts   */  private static final com.sforce.ws.bind.TypeInfo maxLoginAttempts__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","maxLoginAttempts","http://soap.sforce.com/2006/04/metadata","MaxLoginAttempts",0,1,true);  private boolean maxLoginAttempts__is_set = false;  private com.sforce.soap.metadata.MaxLoginAttempts maxLoginAttempts;  public com.sforce.soap.metadata.MaxLoginAttempts getMaxLoginAttempts() {    return maxLoginAttempts;  }    public void setMaxLoginAttempts(com.sforce.soap.metadata.MaxLoginAttempts maxLoginAttempts) {    this.maxLoginAttempts = maxLoginAttempts;    maxLoginAttempts__is_set = true;  }    /**   * element  : minPasswordLength of type {http://soap.sforce.com/2006/04/metadata}MinPasswordLength   * java type: com.sforce.soap.metadata.MinPasswordLength   */  private static final com.sforce.ws.bind.TypeInfo minPasswordLength__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","minPasswordLength","http://soap.sforce.com/2006/04/metadata","MinPasswordLength",0,1,true);  private boolean minPasswordLength__is_set = false;  private com.sforce.soap.metadata.MinPasswordLength minPasswordLength;  public com.sforce.soap.metadata.MinPasswordLength getMinPasswordLength() {    return minPasswordLength;  }    public void setMinPasswordLength(com.sforce.soap.metadata.MinPasswordLength minPasswordLength) {    this.minPasswordLength = minPasswordLength;    minPasswordLength__is_set = true;  }    /**   * element  : passwordAssistanceMessage of type {http://www.w3.org/2001/XMLSchema}string   * java type: java.lang.String   */  private static final com.sforce.ws.bind.TypeInfo passwordAssistanceMessage__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","passwordAssistanceMessage","http://www.w3.org/2001/XMLSchema","string",0,1,true);  private boolean passwordAssistanceMessage__is_set = false;  private java.lang.String passwordAssistanceMessage;  public java.lang.String getPasswordAssistanceMessage() {    return passwordAssistanceMessage;  }    public void setPasswordAssistanceMessage(java.lang.String passwordAssistanceMessage) {    this.passwordAssistanceMessage = passwordAssistanceMessage;    passwordAssistanceMessage__is_set = true;  }    /**   * element  : passwordAssistanceURL of type {http://www.w3.org/2001/XMLSchema}string   * java type: java.lang.String   */  private static final com.sforce.ws.bind.TypeInfo passwordAssistanceURL__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","passwordAssistanceURL","http://www.w3.org/2001/XMLSchema","string",0,1,true);  private boolean passwordAssistanceURL__is_set = false;  private java.lang.String passwordAssistanceURL;  public java.lang.String getPasswordAssistanceURL() {    return passwordAssistanceURL;  }    public void setPasswordAssistanceURL(java.lang.String passwordAssistanceURL) {    this.passwordAssistanceURL = passwordAssistanceURL;    passwordAssistanceURL__is_set = true;  }    /**   * element  : questionRestriction of type {http://soap.sforce.com/2006/04/metadata}QuestionRestriction   * java type: com.sforce.soap.metadata.QuestionRestriction   */  private static final com.sforce.ws.bind.TypeInfo questionRestriction__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","questionRestriction","http://soap.sforce.com/2006/04/metadata","QuestionRestriction",0,1,true);  private boolean questionRestriction__is_set = false;  private com.sforce.soap.metadata.QuestionRestriction questionRestriction;  public com.sforce.soap.metadata.QuestionRestriction getQuestionRestriction() {    return questionRestriction;  }    public void setQuestionRestriction(com.sforce.soap.metadata.QuestionRestriction questionRestriction) {    this.questionRestriction = questionRestriction;    questionRestriction__is_set = true;  }    /**   */  public void write(javax.xml.namespace.QName __element,      com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)      throws java.io.IOException {    __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());        writeFields(__out, __typeMapper);    __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());  }  protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,      com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {       __typeMapper.writeString(__out, apiOnlyUserHomePageURL__typeInfo, apiOnlyUserHomePageURL, apiOnlyUserHomePageURL__is_set);    __typeMapper.writeObject(__out, complexity__typeInfo, complexity, complexity__is_set);    __typeMapper.writeObject(__out, expiration__typeInfo, expiration, expiration__is_set);    __typeMapper.writeString(__out, historyRestriction__typeInfo, historyRestriction, historyRestriction__is_set);    __typeMapper.writeObject(__out, lockoutInterval__typeInfo, lockoutInterval, lockoutInterval__is_set);    __typeMapper.writeObject(__out, maxLoginAttempts__typeInfo, maxLoginAttempts, maxLoginAttempts__is_set);    __typeMapper.writeObject(__out, minPasswordLength__typeInfo, minPasswordLength, minPasswordLength__is_set);    __typeMapper.writeString(__out, passwordAssistanceMessage__typeInfo, passwordAssistanceMessage, passwordAssistanceMessage__is_set);    __typeMapper.writeString(__out, passwordAssistanceURL__typeInfo, passwordAssistanceURL, passwordAssistanceURL__is_set);    __typeMapper.writeObject(__out, questionRestriction__typeInfo, questionRestriction, questionRestriction__is_set);  }  public void load(com.sforce.ws.parser.XmlInputStream __in,      com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {    __typeMapper.consumeStartTag(__in);    loadFields(__in, __typeMapper);    __typeMapper.consumeEndTag(__in);  }  protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,      com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {       __in.peekTag();    if (__typeMapper.isElement(__in, apiOnlyUserHomePageURL__typeInfo)) {      setApiOnlyUserHomePageURL((java.lang.String)__typeMapper.readString(__in, apiOnlyUserHomePageURL__typeInfo, java.lang.String.class));    }    __in.peekTag();    if (__typeMapper.isElement(__in, complexity__typeInfo)) {      setComplexity((com.sforce.soap.metadata.Complexity)__typeMapper.readObject(__in, complexity__typeInfo, com.sforce.soap.metadata.Complexity.class));    }    __in.peekTag();    if (__typeMapper.isElement(__in, expiration__typeInfo)) {      setExpiration((com.sforce.soap.metadata.Expiration)__typeMapper.readObject(__in, expiration__typeInfo, com.sforce.soap.metadata.Expiration.class));    }    __in.peekTag();    if (__typeMapper.isElement(__in, historyRestriction__typeInfo)) {      setHistoryRestriction((java.lang.String)__typeMapper.readString(__in, historyRestriction__typeInfo, java.lang.String.class));    }    __in.peekTag();    if (__typeMapper.isElement(__in, lockoutInterval__typeInfo)) {      setLockoutInterval((com.sforce.soap.metadata.LockoutInterval)__typeMapper.readObject(__in, lockoutInterval__typeInfo, com.sforce.soap.metadata.LockoutInterval.class));    }    __in.peekTag();    if (__typeMapper.isElement(__in, maxLoginAttempts__typeInfo)) {      setMaxLoginAttempts((com.sforce.soap.metadata.MaxLoginAttempts)__typeMapper.readObject(__in, maxLoginAttempts__typeInfo, com.sforce.soap.metadata.MaxLoginAttempts.class));    }    __in.peekTag();    if (__typeMapper.isElement(__in, minPasswordLength__typeInfo)) {      setMinPasswordLength((com.sforce.soap.metadata.MinPasswordLength)__typeMapper.readObject(__in, minPasswordLength__typeInfo, com.sforce.soap.metadata.MinPasswordLength.class));    }    __in.peekTag();    if (__typeMapper.isElement(__in, passwordAssistanceMessage__typeInfo)) {      setPasswordAssistanceMessage((java.lang.String)__typeMapper.readString(__in, passwordAssistanceMessage__typeInfo, java.lang.String.class));    }    __in.peekTag();    if (__typeMapper.isElement(__in, passwordAssistanceURL__typeInfo)) {      setPasswordAssistanceURL((java.lang.String)__typeMapper.readString(__in, passwordAssistanceURL__typeInfo, java.lang.String.class));    }    __in.peekTag();    if (__typeMapper.isElement(__in, questionRestriction__typeInfo)) {      setQuestionRestriction((com.sforce.soap.metadata.QuestionRestriction)__typeMapper.readObject(__in, questionRestriction__typeInfo, com.sforce.soap.metadata.QuestionRestriction.class));    }  }  public String toString() {    java.lang.StringBuilder sb = new java.lang.StringBuilder();    sb.append("[PasswordPolicies ");        sb.append(" apiOnlyUserHomePageURL=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(apiOnlyUserHomePageURL)+"'\n");    sb.append(" complexity=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(complexity)+"'\n");    sb.append(" expiration=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(expiration)+"'\n");    sb.append(" historyRestriction=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(historyRestriction)+"'\n");    sb.append(" lockoutInterval=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(lockoutInterval)+"'\n");    sb.append(" maxLoginAttempts=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(maxLoginAttempts)+"'\n");    sb.append(" minPasswordLength=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(minPasswordLength)+"'\n");    sb.append(" passwordAssistanceMessage=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(passwordAssistanceMessage)+"'\n");    sb.append(" passwordAssistanceURL=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(passwordAssistanceURL)+"'\n");    sb.append(" questionRestriction=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(questionRestriction)+"'\n");    sb.append("]\n");    return sb.toString();  }}