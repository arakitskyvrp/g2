package com.sforce.soap.metadata;/** * Generated class, please do not edit. */public class FlowCondition implements com.sforce.ws.bind.XMLizable {  /**   * Constructor   */  public FlowCondition() {  }        /**   * element  : leftValueReference of type {http://www.w3.org/2001/XMLSchema}string   * java type: java.lang.String   */  private static final com.sforce.ws.bind.TypeInfo leftValueReference__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","leftValueReference","http://www.w3.org/2001/XMLSchema","string",1,1,true);  private boolean leftValueReference__is_set = false;  private java.lang.String leftValueReference;  public java.lang.String getLeftValueReference() {    return leftValueReference;  }    public void setLeftValueReference(java.lang.String leftValueReference) {    this.leftValueReference = leftValueReference;    leftValueReference__is_set = true;  }    /**   * element  : operator of type {http://soap.sforce.com/2006/04/metadata}FlowComparisonOperator   * java type: com.sforce.soap.metadata.FlowComparisonOperator   */  private static final com.sforce.ws.bind.TypeInfo operator__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","operator","http://soap.sforce.com/2006/04/metadata","FlowComparisonOperator",1,1,true);  private boolean operator__is_set = false;  private com.sforce.soap.metadata.FlowComparisonOperator operator;  public com.sforce.soap.metadata.FlowComparisonOperator getOperator() {    return operator;  }    public void setOperator(com.sforce.soap.metadata.FlowComparisonOperator operator) {    this.operator = operator;    operator__is_set = true;  }    /**   * element  : rightValue of type {http://soap.sforce.com/2006/04/metadata}FlowElementReferenceOrValue   * java type: com.sforce.soap.metadata.FlowElementReferenceOrValue   */  private static final com.sforce.ws.bind.TypeInfo rightValue__typeInfo =    new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","rightValue","http://soap.sforce.com/2006/04/metadata","FlowElementReferenceOrValue",0,1,true);  private boolean rightValue__is_set = false;  private com.sforce.soap.metadata.FlowElementReferenceOrValue rightValue;  public com.sforce.soap.metadata.FlowElementReferenceOrValue getRightValue() {    return rightValue;  }    public void setRightValue(com.sforce.soap.metadata.FlowElementReferenceOrValue rightValue) {    this.rightValue = rightValue;    rightValue__is_set = true;  }    /**   */  public void write(javax.xml.namespace.QName __element,      com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)      throws java.io.IOException {    __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());        writeFields(__out, __typeMapper);    __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());  }  protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,      com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {       __typeMapper.writeString(__out, leftValueReference__typeInfo, leftValueReference, leftValueReference__is_set);    __typeMapper.writeObject(__out, operator__typeInfo, operator, operator__is_set);    __typeMapper.writeObject(__out, rightValue__typeInfo, rightValue, rightValue__is_set);  }  public void load(com.sforce.ws.parser.XmlInputStream __in,      com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {    __typeMapper.consumeStartTag(__in);    loadFields(__in, __typeMapper);    __typeMapper.consumeEndTag(__in);  }  protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,      com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {       __in.peekTag();    if (__typeMapper.verifyElement(__in, leftValueReference__typeInfo)) {      setLeftValueReference((java.lang.String)__typeMapper.readString(__in, leftValueReference__typeInfo, java.lang.String.class));    }    __in.peekTag();    if (__typeMapper.verifyElement(__in, operator__typeInfo)) {      setOperator((com.sforce.soap.metadata.FlowComparisonOperator)__typeMapper.readObject(__in, operator__typeInfo, com.sforce.soap.metadata.FlowComparisonOperator.class));    }    __in.peekTag();    if (__typeMapper.isElement(__in, rightValue__typeInfo)) {      setRightValue((com.sforce.soap.metadata.FlowElementReferenceOrValue)__typeMapper.readObject(__in, rightValue__typeInfo, com.sforce.soap.metadata.FlowElementReferenceOrValue.class));    }  }  public String toString() {    java.lang.StringBuilder sb = new java.lang.StringBuilder();    sb.append("[FlowCondition ");        sb.append(" leftValueReference=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(leftValueReference)+"'\n");    sb.append(" operator=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(operator)+"'\n");    sb.append(" rightValue=");    sb.append("'"+com.sforce.ws.util.Verbose.toString(rightValue)+"'\n");    sb.append("]\n");    return sb.toString();  }}